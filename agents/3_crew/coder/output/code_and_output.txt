The final answer includes the complete content for creating a REST API in Python using FastAPI, with all necessary code, instructions, sample output, dependencies, and explanation. Here is the content:

# output/code_and_output.txt

# FastAPI API to get current date and time by country

## Code
```python
from fastapi import FastAPI, HTTPException
import httpx

app = FastAPI()

# A dictionary to match countries to their capital timezone
countries_timezones = {
    "USA": "America/New_York",
    "Canada": "America/Toronto",
    "UK": "Europe/London",
    # Additional countries can be added here
}

@app.get("/current_datetime/")
async def current_datetime(country: str):
    if country in countries_timezones:
        timezone = countries_timezones[country]
        async with httpx.AsyncClient() as client:
            response = await client.get(f"http://worldtimeapi.org/api/timezone/{timezone}")
            if response.status_code == 200:
                data = response.json()
                return {"current_datetime": data["datetime"]}
            else:
                raise HTTPException(status_code=404, detail="Timezone not found")
    else:
        raise HTTPException(status_code=400, detail="Country not supported")

# Instructions to run the server
"""
1. Install the required dependencies:
   pip install fastapi uvicorn httpx

2. Run the server using the command:
   uvicorn main:app --reload

3. Access the API to get the current datetime by visiting:
   http://127.0.0.1:8000/current_datetime/?country=USA
"""

## Sample Output
# When accessing the endpoint /current_datetime/?country=USA, the response would be:
# {
#     "current_datetime": "2023-10-05T14:48:00Z"
# }

## Dependencies
fastapi,
uvicorn,
httpx

## Explanation
The API defines a single endpoint `/current_datetime` that responds to GET requests. The country parameter is used to look up the appropriate timezone corresponding to the capital city of that country. If the country is supported and the timezone API returns a valid response, the current date and time are extracted from the response and sent back in JSON format. The code includes error handling for unsupported countries and issues with retrieving timezone data.
```